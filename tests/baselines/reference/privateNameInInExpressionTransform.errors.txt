tests/cases/conformance/classes/members/privateNames/privateNameInInExpressionTransform.ts(20,14): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
tests/cases/conformance/classes/members/privateNames/privateNameInInExpressionTransform.ts(20,24): error TS2361: The right-hand side of an 'in' expression must not be a primitive.
tests/cases/conformance/classes/members/privateNames/privateNameInInExpressionTransform.ts(22,14): error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
tests/cases/conformance/classes/members/privateNames/privateNameInInExpressionTransform.ts(29,21): error TS1005: ';' expected.
tests/cases/conformance/classes/members/privateNames/privateNameInInExpressionTransform.ts(30,21): error TS1005: ';' expected.
tests/cases/conformance/classes/members/privateNames/privateNameInInExpressionTransform.ts(42,12): error TS18016: Private identifiers are not allowed outside class bodies.


==== tests/cases/conformance/classes/members/privateNames/privateNameInInExpressionTransform.ts (6 errors) ====
    class Foo {
        #field = 1;
        #method() {}
        static #staticField= 2;
        static #staticMethod() {}
    
        check(v: any) {
            #field in v; // expect Foo's 'field' WeakMap
            #method in v; // expect Foo's 'method' WeakSet
            #staticField in v; // expect Foo's constructor
            #staticMethod in v; // expect Foo's constructor
        }
        precedence(v: any) {
            // '==' has lower precedence than 'in'
            // '<'  has same precedence than 'in'
            // '<<' has higher precedence than 'in'
    
            v == #field in v == v; // Good precedence: ((v == (#field in v)) == v)
    
            v << #field in v << v; // Good precedence: (v << (#field in (v << v)))
                 ~~~~~~~~~~~~~~~~
!!! error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
                           ~~~~~~
!!! error TS2361: The right-hand side of an 'in' expression must not be a primitive.
    
            v << #field in v == v; // Good precedence: ((v << (#field in v)) == v)
                 ~~~~~~~~~~~
!!! error TS2363: The right-hand side of an arithmetic operation must be of type 'any', 'number', 'bigint' or an enum type.
    
            v == #field in v < v; // Good precedence: (v == ((#field in v) < v))
    
            #field in v && #field in v; // Good precedence: ((#field in v) && (#field in v))
        }
        invalidLHS(v: any) {
            'prop' in v = 10;
                        ~
!!! error TS1005: ';' expected.
            #field in v = 10;
                        ~
!!! error TS1005: ';' expected.
        }
    }
    
    class Bar {
        #field = 1;
        check(v: any) {
            #field in v; // expect Bar's 'field' WeakMap
        }
    }
    
    function syntaxError(v: Foo) {
        return #field in v; // expect `return in v` so runtime will have a syntax error
               ~~~~~~
!!! error TS18016: Private identifiers are not allowed outside class bodies.
    }
    
    export { }
    